{
    "openapi": "3.1.0",
    "info": {
        "title": "PetSitter API",
        "version": "0.1"
    },
    "servers": [
        {
            "url": "/"
        }
    ],
    "paths": {
        "/jobs": {
            "post": {
                "tags": [
                    "Jobs"
                ],
                "summary": "Create Job",
                "operationId": "createJob",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Job"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "headers": {
                            "Location": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OASError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OASError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/problem+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Problem"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Jobs"
                ],
                "summary": "List/Search Available Jobs",
                "operationId": "listOrSearchAvailableJobs",
                "parameters": [
                    {
                        "name": "start_time_before",
                        "in": "query",
                        "description": "Search jobs starting before this date and time.",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "start_time_after",
                        "in": "query",
                        "description": "Search jobs starting after this date and time.",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "end_time_before",
                        "in": "query",
                        "description": "Search jobs ending before this date and time.",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "end_time_after",
                        "in": "query",
                        "description": "Search jobs ending after this date and time.",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "activity",
                        "in": "query",
                        "description": "Performs a full-text search for the phrase entered in job activities.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pets",
                        "in": "query",
                        "description": "Searches for pets matching specific criteria.",
                        "style": "form",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "age_below": {
                                    "type": "integer",
                                    "description": "Return only pets with this age or younger."
                                },
                                "age_above": {
                                    "type": "integer",
                                    "description": "Return only pets with this age or older."
                                },
                                "species": {
                                    "type": "string",
                                    "description": "Return only pets with this species. Provide multiple species as comma-separated values."
                                }
                            }
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "The maximum number of results to return.",
                        "schema": {
                            "type": "integer",
                            "default": 20,
                            "maximum": 100
                        }
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "description": "Use the cursor from the response to access more results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Indicate the sorting key and direction for the results.\nUse the field name, suffixed with \":asc\" for ascending\nor \":desc\" for descending order.\nValid fields: start_time, end_time\n",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "items": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Job"
                                            }
                                        },
                                        "cursor": {
                                            "type": "string",
                                            "description": "Cursor for the next result page."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Job": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "creator_user_id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "start_time": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "end_time": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "activity": {
                        "type": "string",
                        "minLength": 5,
                        "maxLength": 500
                    },
                    "dog": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Dog"
                            },
                            {
                                "description": "This is deprecated, prefer to use `pets`.\nIf both exist, `dog` will be ignored and `pets` will be used.\n",
                                "deprecated": true
                            }
                        ]
                    },
                    "pets": {
                        "type": "array",
                        "minItems": 1,
                        "maxItems": 10,
                        "items": {
                            "$ref": "#/components/schemas/Pet"
                        }
                    }
                }
            },
            "Dog": {
                "type": "object",
                "properties": {
                    "species": {
                        "type": "string"
                    },
                    "breed": {
                        "type": "string"
                    },
                    "size": {
                        "type": "string"
                    }
                },
                "required": [
                    "species"
                ]
            },
            "Cat": {
                "type": "object",
                "properties": {
                    "species": {
                        "type": "string"
                    },
                    "breed": {
                        "type": "string"
                    }
                },
                "required": [
                    "species"
                ]
            },
            "Pet": {
                "allOf": [
                    {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "minLength": 2,
                                "maxLength": 20
                            },
                            "age": {
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 100
                            }
                        }
                    },
                    {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Cat"
                            },
                            {
                                "$ref": "#/components/schemas/Dog"
                            }
                        ],
                        "discriminator": {
                            "propertyName": "species",
                            "mapping": {
                                "Cat": "#/components/schemas/Cat",
                                "Dog": "#/components/schemas/Dog"
                            }
                        }
                    }
                ]
            },
            "OASError": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "Human-readable error message"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "path": {
                                    "type": "string",
                                    "description": "For input validation errors, identifies where in the JSON request body the error occured"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "Human-readable error message"
                                },
                                "errorCode": {
                                    "type": "string",
                                    "description": "Code indicating error type"
                                }
                            }
                        }
                    }
                }
            },
            "Problem": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "description": "URI indicating error type"
                    },
                    "title": {
                        "type": "string",
                        "description": "Human-readable error title"
                    },
                    "status": {
                        "type": "integer",
                        "description": "HTTP status code"
                    },
                    "detail": {
                        "type": "string",
                        "description": "Human-readable error details"
                    },
                    "instance": {
                        "type": "string",
                        "description": "URI indicating error instance"
                    }
                }
            }
        },
        "securitySchemes": {
            "SessionToken": {
                "type": "apiKey",
                "in": "header",
                "name": "Authorization"
            }
        }
    }
}